name: Build using .NET Core

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Check for tabs
      run: |
        find "(" -name "*.cs" -or -name "*.lua" -or -name "*.jl" -or -name "*.lang" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Pl "\t" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No tab found!"

    - name: Check for CRLF
      run: |
        find "(" -name "*.cs" -or -name "*.lua" -or -name "*.jl" -or -name "*.lang" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Plz "\r\n" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No CRLF found!"

    - name: Check for trailing spaces
      run: |
        find "(" -name "*.cs" -or -name "*.lua" -or -name "*.jl" -or -name "*.lang" -or -name "*.xml" -or -name "*.yaml" -or -name "*.yml" -or -name "*.txt" -or -name "*.md" ")" -exec grep -Pl " $" {} \; > matches.txt
        grep "" matches.txt && exit 1 || echo "No trailing space found!"

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 2.2.108

    - name: Restore with .NET Core
      run: dotnet restore

    - name: Build using Mono
      run: msbuild *.sln "/p:Configuration=Release"

    - name: Upload artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: main
        path: bin/Release/net452

    - name: Publish release
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/gh-actions'
      env:
        ZIPNAME: CollabUtils2
        GITHUB_SHA: ${{ github.sha }}
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        echo "This documentation is formatted in Markdown." > documentation.txt
        echo "To view it in its formatted form for easier reading, visit this link: https://github.com/EverestAPI/CelesteCollabUtils2/blob/master/DOCUMENTATION.md" >> documentation.txt
        echo "" >> documentation.txt
        cat DOCUMENTATION.md >> documentation.txt
        rm Ahorn/triggers/mapSwapTrigger.jl
        ZIPNAME=$ZIPNAME-${GITHUB_SHA:0:8}.zip
        zip -qq -r $ZIPNAME everest.yaml bin/Release/net452 Ahorn Graphics Audio Dialog Loenn documentation.txt
        url=$(curl -H 'Content-Type: multipart/form-data' -X POST -F "file=@$ZIPNAME" "$DISCORD_WEBHOOK" | grep -Po 'cdn.discordapp.com\/.*?\.zip' | tr -d '\n')
        msg=$(git log -n 1 "--format=%B" | head -n 1 | tr -d '\n')
        curl -H 'Content-Type: application/json' -X POST -d "$(jq -n \
          --arg zipname "$ZIPNAME" \
          --arg url "$url" \
          --arg msg "$msg" \
          '{embeds: [{title: "Install \($zipname)", url: "https://0x0ade.ga/twoclick/?\($url)", description: $msg}]}' \
        )" "$DISCORD_WEBHOOK"
